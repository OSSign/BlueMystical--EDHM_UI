on:
  push:
    branches:
      - main

jobs:
  build-and-sign-win:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '24'

      - name: Install dependencies
        run: cd source_v3/ && yarn install --frozen-lockfile
      
      - name: Build the project
        run: |
          cd source_v3/
          npm run make
          ls
          ls out/
      - name: Sign the installer(s)
        uses: ossign/ossign@main
        with:
          config: ${{ secrets.OSSIGN_CONFIG }}
          inputFiles: 'source_v3/out/EDHM-UI-V3-win32-x64/*.exe'
          fileType: "pecoff"
          token: ${{ secrets.GITHUB_TOKEN }}
      
      
      - name: Build the project
        run: |
          cd source_v3/
          npm run publish
          ls
          ls out/

      - name: Sign the application
        uses: ossign/ossign@main
        with:
          config: ${{ secrets.OSSIGN_CONFIG }}
          inputFiles: 'source_v3/out/make/squirrel.windows/x64/*.exe'
          fileType: "pecoff"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            source_v3/out/make/squirrel.windows/*
            source_v3/


      # - name: Sign the executable
      #   env:
      #     SIGNING_CERTIFICATE: ${{ secrets.SIGNING_CERTIFICATE }}
      #     SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
      #   run: |
      #     echo $SIGNING_CERTIFICATE | base64 -d > certificate.pfx
      #     signtool sign /f certificate.pfx /p $SIGNING_PASSWORD /tr http://timestamp.digicert.com /td sha256 /fd sha256 path\to\your\executable.exe

      # - name: Upload artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: signed-executable